image: "rust:1.64"

default:
  before_script:
    - rustc --version
    - cargo --version
    - cargo install sqlx-cli --no-default-features --features rustls,postgres
    - sqlx database create
    - sqlx migrate run
  services:
    - name: postgres:14-alpine

stages:
  - test

check-migrations:
  stage: test
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_URL: postgres://postgres:password@postgres:5432/newsletter
  script:
    - cargo sqlx prepare --check -- --bin newsletter

test-code:
  stage: test
  coverage: '/^\d+.\d+% coverage/'
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_URL: postgres://postgres:password@postgres:5432/newsletter
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  script:
    - cargo test
    - cargo install cargo-tarpaulin
    - cargo tarpaulin --ignore-tests --out Xml

lint-code:
  stage: test
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_URL: postgres://postgres:password@postgres:5432/newsletter
  script:
    - rustup component add clippy
    - cargo clippy -- --deny warnings

format-code:
  stage: test
  before_script:
    - rustc --version
    - cargo --version
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

audit-code:
  stage: test
  before_script:
    - rustc --version
    - cargo --version
  script:
    - cargo install cargo-audit
    - cargo audit --deny warnings
